{
  "name": "Personal Codex Agent",
  "dockerFile": "../Dockerfile.dev",
  
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-python.pylint",
        "ms-toolsai.jupyter",
        "charliermarsh.ruff",
        "ms-vscode.makefile-tools",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.testing.pytestEnabled": true,
        "python.terminal.activateEnvironment": true,
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8501],
  "portsAttributes": {
    "8501": {
      "label": "Streamlit App",
      "onAutoForward": "notify"
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "pip install -r requirements.txt && pip install -e .",

  // Set environment variables
  "containerEnv": {
    "PYTHONPATH": "/workspaces/personal-codex-agent/src",
    "STREAMLIT_SERVER_PORT": "8501",
    "STREAMLIT_SERVER_ADDRESS": "0.0.0.0"
  },

  // Configure mounts
  "mounts": [
    "source=${localWorkspaceFolder}/.env,target=/workspaces/personal-codex-agent/.env,type=bind,consistency=cached"
  ],

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },

  // Configure remote user
  "remoteUser": "vscode",
  
  // Configure lifecycle scripts
  "initializeCommand": "echo 'Initializing Personal Codex Agent development environment...'",
  
  // Configure secrets
  "secrets": {
    "OPENAI_API_KEY": {
      "description": "OpenAI API key for embeddings and chat completions"
    }
  }
}